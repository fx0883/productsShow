# Generated by Django 5.2 on 2025-04-10 10:17

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('has_predefined_values', models.BooleanField(default=True, help_text='是否有预定义的可选值')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '属性',
                'verbose_name_plural': '属性',
                'db_table': 'attributes',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='products.attribute')),
            ],
            options={
                'verbose_name': '属性值',
                'verbose_name_plural': '属性值',
                'db_table': 'attribute_values',
                'ordering': ['sort_order'],
                'unique_together': {('attribute', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': '产品分类',
                'verbose_name_plural': '产品分类',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('vl_id', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('simple', '简单产品'), ('variable', '变体产品'), ('grouped', '组合产品'), ('external', '外部/affiliate产品')], default='simple', max_length=20)),
                ('status', models.CharField(choices=[('draft', '草稿'), ('published', '已发布'), ('trash', '回收站')], default='draft', max_length=20)),
                ('featured', models.BooleanField(default=False)),
                ('catalog_visibility', models.CharField(choices=[('visible', '可见'), ('catalog', '仅在目录中可见'), ('search', '仅在搜索中可见'), ('hidden', '隐藏')], default='visible', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('short_description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_price_start_date', models.DateTimeField(blank=True, null=True)),
                ('sale_price_end_date', models.DateTimeField(blank=True, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('stock_status', models.CharField(default='instock', max_length=20)),
                ('backorders_allowed', models.BooleanField(default=False)),
                ('sold_individually', models.BooleanField(default=False)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_class', models.CharField(blank=True, max_length=100)),
                ('reviews_allowed', models.BooleanField(default=True)),
                ('purchase_note', models.TextField(blank=True)),
                ('gtin', models.CharField(blank=True, help_text='GTIN, UPC, EAN, or ISBN', max_length=100)),
                ('external_url', models.URLField(blank=True)),
                ('button_text', models.CharField(blank=True, max_length=100)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(related_name='products', to='products.category')),
                ('cross_sell_products', models.ManyToManyField(blank=True, related_name='cross_sell_to', to='products.product')),
                ('upsell_products', models.ManyToManyField(blank=True, related_name='upsell_to', to='products.product')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='products.tag')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
                'db_table': 'products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('image_url', models.URLField(blank=True, help_text='外部图片URL，用于导入数据')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': '产品图片',
                'verbose_name_plural': '产品图片',
                'db_table': 'product_images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('vl_id', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sale_price_start_date', models.DateTimeField(blank=True, null=True)),
                ('sale_price_end_date', models.DateTimeField(blank=True, null=True)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('stock_status', models.CharField(default='instock', max_length=20)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variations', to='products.productimage')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.product')),
            ],
            options={
                'verbose_name': '产品变体',
                'verbose_name_plural': '产品变体',
                'db_table': 'product_variations',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_for_variations', models.BooleanField(default=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='products.product')),
            ],
            options={
                'verbose_name': '产品属性',
                'verbose_name_plural': '产品属性',
                'db_table': 'product_attributes',
                'unique_together': {('product', 'attribute')},
            },
        ),
        migrations.CreateModel(
            name='VariationAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attribute')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.attributevalue')),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='products.productvariation')),
            ],
            options={
                'verbose_name': '变体属性',
                'verbose_name_plural': '变体属性',
                'db_table': 'variation_attributes',
                'unique_together': {('variation', 'attribute')},
            },
        ),
    ]
